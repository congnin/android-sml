allprojects {
    repositories {
        jcenter()
    }
}

ext {
    //Android
    androidBuildToolsVersion = "28.0.3"
    androidMinSdkVersion = 15
    androidTargetSdkVersion = 26
    androidCompileSdkVersion = 26

    //Libraries
    daggerVersion = '2.14.1'
    butterKnifeVersion = '8.7.0'
    butterKnifeCompiler = '8.7.0'
    recyclerViewVersion = '23.4.0'
    javaxAnnotationVersion = '1.0'
    gsonVersion = '2.7'
    okHttpVersion = '3.3.1'
    androidAnnotationsVersion = '23.1.1'
    retrofitVersion = '2.3.0'
    retrofitJsonConverterVersion = '2.3.0'
    retrofitRxjavaVersion = '2.3.0'
    timberVersion = '4.1.2'
    multidexVersion = '1.0.1'
    trueTimeVersion = '3.3'

    //Google
    supportLibraryVersion = '25.3.1'
    playServiceVersion = "11.4.2"
    constraintLayoutVersion = "1.0.2"

    //Testing
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoVersion = '2.23.0'
    powermockVersion = '2.0.0-beta.5'
    mockitoKotLin = "1.6.0"
    androidsupportTestRule = '1.0.1'

    dexmakerVersion = '1.4'
    testingSupportLibVersion = '0.1'
    testRunnerVersion = '0.4'
    hamcrestVersion = '1.1'

    rxJava2 = '2.2.0'
    rxAndroid2 = '2.0.2'

    presentationDependencies = [
            kotlinStdlib          : "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}",
            kotlinReflect         : "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}",
            supportLibrary        : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportDesignLibrary  : "com.android.support:design:${supportLibraryVersion}",
            supportAnnotations    : "com.android.support:support-annotations:${androidAnnotationsVersion}",
            playService           : dependencies.create("com.google.android.gms:play-services-vision:${playServiceVersion}") {
                exclude module: 'support-annotations'
                exclude module: 'support-v4'
            },
            cardView              : "com.android.support:cardview-v7:${supportLibraryVersion}",
            multidex              : "com.android.support:multidex:${multidexVersion}",
            constraintLayout      : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",

            daggerCompiler        : "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger                : "com.google.dagger:dagger:${daggerVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${daggerVersion}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${daggerVersion}",
            butterKnife           : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler   : "com.jakewharton:butterknife-compiler:${butterKnifeCompiler}",

            recyclerView          : "com.android.support:recyclerview-v7:${recyclerViewVersion}",
            gson                  : "com.google.code.gson:gson:${gsonVersion}",
            rxJava2               : "io.reactivex.rxjava2:rxjava:${rxJava2}",
            rxAndroid2            : "io.reactivex.rxjava2:rxandroid:${rxAndroid2}",
            javaxAnnotation       : "javax.annotation:jsr250-api:${javaxAnnotationVersion}",

            retrofit              : dependencies.create("com.squareup.retrofit2:retrofit:${retrofitVersion}") {
                exclude group: 'com.squareup.okhttp3'
            },
            retrofitJsonConverter : dependencies.create("com.squareup.retrofit2:converter-gson:${retrofitJsonConverterVersion}") {
                exclude group: 'com.squareup.okhttp3'
            },
            retrofitRxjava        : dependencies.create("com.squareup.retrofit2:adapter-rxjava2:${retrofitRxjavaVersion}") {
                exclude module: 'rxjava'
                exclude group: 'com.squareup.okhttp3'
            },

            okHttp                : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpInterceptor     : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",

            timber                : "com.jakewharton.timber:timber:${timberVersion}",
            viewanimator          : dependencies.create("com.github.florent37:viewanimator:1.0.3") {
                exclude module: 'support-annotations'
            },
            slidinguppanel        : dependencies.create("com.sothree.slidinguppanel:library:3.3.1") {
                exclude module: 'support-annotations'
                exclude module: 'support-v4'
                exclude module: 'recyclerview-v7'
                exclude module: 'design'
            },
            annimonStream         : "com.annimon:stream:1.0.1",
            rxbinding             : "com.jakewharton.rxbinding:rxbinding:0.4.0",
            persistentCookieJar   : "com.github.franmontiel:PersistentCookieJar:v1.0.1",
            trueTime : "com.github.instacart.truetime-android:library-extension-rx:${trueTimeVersion}"
    ]

    presentationTestDependencies = [
            kotlinTestJunit       : "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version",
            mockitoKotlin         : "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotLin",
            androidSupportTestRule: "com.android.support.test:rules:$androidsupportTestRule",
            junit                 : "junit:junit:${jUnitVersion}",
            assertj               : "org.assertj:assertj-core:${assertJVersion}",
            mockito               : "org.mockito:mockito-core:${mockitoVersion}",
            powermockJunit        : "org.powermock:powermock-module-junit4:${powermockVersion}",
            powermockMockito      : "org.powermock:powermock-api-mockito2:${powermockVersion}",

            rxJava2                : "io.reactivex.rxjava2:rxjava:${rxJava2}",
            testingSupportLib     : "com.android.support.test:testing-support-lib:${testingSupportLibVersion}",

            dexmaker              : "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito       : "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}",

            hamcrestCore          : "org.hamcrest:hamcrest-core:${hamcrestVersion}",
            hamcrestLibrary       : "org.hamcrest:hamcrest-library:${hamcrestVersion}",
            hamcrestIntegration   : "org.hamcrest:hamcrest-integration:${hamcrestVersion}"
    ]
}